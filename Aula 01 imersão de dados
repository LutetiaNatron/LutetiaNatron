{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNFXmIczeTkM/YXbNXIHek3",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/LutetiaNatron/LutetiaNatron/blob/main/Aula%2001%20imers%C3%A3o%20de%20dados\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "20+20\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WIHIK9CVHw4N",
        "outputId": "275f6dc2-103b-4711-e015-c5658163b3c9"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "40"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "url = \"https://gist.githubusercontent.com/tgcsantos/3bdb29eba6ce391e90df2b72205ba891/raw/22fa920e80c9fa209a9fccc8b52d74cc95d1599b/dados_imoveis.csv\"\n",
        "dados = pd.read_csv(url)"
      ],
      "metadata": {
        "id": "amX3g1i8Ig5I"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dados.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "T1Is9sOuIhqH",
        "outputId": "2e75c6d4-3288-4a78-c17a-91c5b722c2e4"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                              Rua              Bairro     Cidade  Metragem  \\\n",
              "0           Avenida Itacira, 255    Planalto Paulista  São Paulo      1000   \n",
              "1  Rua Aurelia Perez Alvarez, 42   Jardim dos Estados  São Paulo       496   \n",
              "2                 Rua Alba Valdez     Jardim Reimberg  São Paulo       125   \n",
              "3                             NaN      Jardim Morumbi  São Paulo       310   \n",
              "4        Rua Tobias Barreto, 195                Mooca  São Paulo       100   \n",
              "\n",
              "   Quartos  Banheiros  Vagas         Valor  \n",
              "0        4          8      6  R$ 7.000.000  \n",
              "1        4          4      4  R$ 3.700.000  \n",
              "2        4          3      2    R$ 380.000  \n",
              "3        3          2      4    R$ 685.000  \n",
              "4        3          2      2    R$ 540.000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e781f171-44d1-4911-8b04-dc963ced4981\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rua</th>\n",
              "      <th>Bairro</th>\n",
              "      <th>Cidade</th>\n",
              "      <th>Metragem</th>\n",
              "      <th>Quartos</th>\n",
              "      <th>Banheiros</th>\n",
              "      <th>Vagas</th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Avenida Itacira, 255</td>\n",
              "      <td>Planalto Paulista</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>1000</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>R$ 7.000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Rua Aurelia Perez Alvarez, 42</td>\n",
              "      <td>Jardim dos Estados</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>496</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>R$ 3.700.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Rua Alba Valdez</td>\n",
              "      <td>Jardim Reimberg</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>125</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>R$ 380.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Jardim Morumbi</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>310</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>R$ 685.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Rua Tobias Barreto, 195</td>\n",
              "      <td>Mooca</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>100</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>R$ 540.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e781f171-44d1-4911-8b04-dc963ced4981')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e781f171-44d1-4911-8b04-dc963ced4981 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e781f171-44d1-4911-8b04-dc963ced4981');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dados.sample(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "KVFMiN-NIofW",
        "outputId": "909039e4-11bc-4c57-bfa2-0d736c421490"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                              Rua                            Bairro  \\\n",
              "1900           Rua Maria Carolina                 Jardim Paulistano   \n",
              "5380                  Rua Leucina                     Cidade Vargas   \n",
              "8757                Rua Babitonga                 Brooklin Paulista   \n",
              "9226            Rua Pais da Silva  Chácara Santo Antônio (Zona Sul)   \n",
              "4101                   Rua Sérgio                      Vila Marieta   \n",
              "3998               Rua Rolf Laube                           Cambuci   \n",
              "4269               Rua Petrópolis                            Sumaré   \n",
              "4022                          NaN                   Vila Progredior   \n",
              "1645  Rua Caetano de Campos, 000                       Vila Moreira   \n",
              "8017       Rua Ermilo Borba Filho                        Campo Belo   \n",
              "\n",
              "         Cidade  Metragem  Quartos  Banheiros  Vagas         Valor  \n",
              "1900  São Paulo       180        3          3      2  R$ 2.680.000  \n",
              "5380  São Paulo       220        3          5      5    R$ 750.000  \n",
              "8757  São Paulo       185        3          3      3    R$ 960.000  \n",
              "9226  São Paulo       171        3          3      2    R$ 810.000  \n",
              "4101  São Paulo       198        3          4      3  R$ 1.100.000  \n",
              "3998  São Paulo       175        4          4      2    R$ 900.000  \n",
              "4269  São Paulo       455        4          5      4  R$ 2.970.000  \n",
              "4022  São Paulo       155        2          2      3  R$ 1.900.000  \n",
              "1645  São Paulo       140        3          2      2  R$ 1.200.000  \n",
              "8017  São Paulo       250        4          2      2    R$ 970.000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6990f51d-7634-4116-8621-5e7c98a911f2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rua</th>\n",
              "      <th>Bairro</th>\n",
              "      <th>Cidade</th>\n",
              "      <th>Metragem</th>\n",
              "      <th>Quartos</th>\n",
              "      <th>Banheiros</th>\n",
              "      <th>Vagas</th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1900</th>\n",
              "      <td>Rua Maria Carolina</td>\n",
              "      <td>Jardim Paulistano</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>180</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>R$ 2.680.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5380</th>\n",
              "      <td>Rua Leucina</td>\n",
              "      <td>Cidade Vargas</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>220</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>R$ 750.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8757</th>\n",
              "      <td>Rua Babitonga</td>\n",
              "      <td>Brooklin Paulista</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>185</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>R$ 960.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9226</th>\n",
              "      <td>Rua Pais da Silva</td>\n",
              "      <td>Chácara Santo Antônio (Zona Sul)</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>171</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>R$ 810.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4101</th>\n",
              "      <td>Rua Sérgio</td>\n",
              "      <td>Vila Marieta</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>198</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>R$ 1.100.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3998</th>\n",
              "      <td>Rua Rolf Laube</td>\n",
              "      <td>Cambuci</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>175</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>R$ 900.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4269</th>\n",
              "      <td>Rua Petrópolis</td>\n",
              "      <td>Sumaré</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>455</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>R$ 2.970.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4022</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Vila Progredior</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>155</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>R$ 1.900.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1645</th>\n",
              "      <td>Rua Caetano de Campos, 000</td>\n",
              "      <td>Vila Moreira</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>140</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>R$ 1.200.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8017</th>\n",
              "      <td>Rua Ermilo Borba Filho</td>\n",
              "      <td>Campo Belo</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>250</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>R$ 970.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6990f51d-7634-4116-8621-5e7c98a911f2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6990f51d-7634-4116-8621-5e7c98a911f2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6990f51d-7634-4116-8621-5e7c98a911f2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dados.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DF6Zry4aVzQb",
        "outputId": "1ad8eb4f-ed96-47e9-e19e-0d5c8f9c543f"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 10008 entries, 0 to 10007\n",
            "Data columns (total 8 columns):\n",
            " #   Column     Non-Null Count  Dtype \n",
            "---  ------     --------------  ----- \n",
            " 0   Rua        6574 non-null   object\n",
            " 1   Bairro     9996 non-null   object\n",
            " 2   Cidade     10008 non-null  object\n",
            " 3   Metragem   10008 non-null  int64 \n",
            " 4   Quartos    10008 non-null  int64 \n",
            " 5   Banheiros  10008 non-null  int64 \n",
            " 6   Vagas      10008 non-null  int64 \n",
            " 7   Valor      10008 non-null  object\n",
            "dtypes: int64(4), object(4)\n",
            "memory usage: 625.6+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dados[\"Bairro\"][6522]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "6FX3h5mLV_a8",
        "outputId": "e2619721-2a61-4d13-ae6c-ae3ee27204d2"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Vila Paulo Silas'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dados.Metragem.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pVF1GvsyWF99",
        "outputId": "1987e7ee-80e8-4b9f-d000-98973df8ff3f"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "442.30065947242207"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dados[\"Metragem\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pJh8cGOGWJsp",
        "outputId": "bffe3890-bb02-42f8-8745-3b00648b2c2b"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "442.30065947242207"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sum((dados[\"Bairro\"] == \"Vila Mariana\"))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WrxUQM9pWN9s",
        "outputId": "1afe48d5-70a8-4e5c-a92b-595c8ba2cb3c"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "184"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tem_imoveis_vila =( dados[\"Bairro\"] == \"Vila Mariana\")\n",
        "tem_imoveis_vila"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6SSlIA5MWSYa",
        "outputId": "228b80e0-45fe-4296-a852-f63e54398a8c"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        False\n",
              "1        False\n",
              "2        False\n",
              "3        False\n",
              "4        False\n",
              "         ...  \n",
              "10003    False\n",
              "10004    False\n",
              "10005    False\n",
              "10006    False\n",
              "10007    False\n",
              "Name: Bairro, Length: 10008, dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "imoveis_vila_mariana = dados[tem_imoveis_vila]\n",
        "imoveis_vila_mariana"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "w9jH4cGBWbjJ",
        "outputId": "64c0d358-8ec7-4880-dadb-8f0a77543e25"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                               Rua        Bairro     Cidade  Metragem  \\\n",
              "100               Rua Pero Correia  Vila Mariana  São Paulo       250   \n",
              "120   Praça Doutor Carvalho Franco  Vila Mariana  São Paulo       250   \n",
              "155     Rua Professor João Marinho  Vila Mariana  São Paulo       170   \n",
              "160                            NaN  Vila Mariana  São Paulo       228   \n",
              "334         Rua Pero Correia, 892   Vila Mariana  São Paulo       350   \n",
              "...                            ...           ...        ...       ...   \n",
              "9645               Rua Sousa Ramos  Vila Mariana  São Paulo       285   \n",
              "9701             Rua Benito Juarez  Vila Mariana  São Paulo       171   \n",
              "9737             Rua Benito Juarez  Vila Mariana  São Paulo       171   \n",
              "9807                           NaN  Vila Mariana  São Paulo       275   \n",
              "9852              Rua França Pinto  Vila Mariana  São Paulo       280   \n",
              "\n",
              "      Quartos  Banheiros  Vagas         Valor  \n",
              "100         3          3      1  R$ 1.350.000  \n",
              "120         3          5      2  R$ 2.450.000  \n",
              "155         3          4      2  R$ 1.490.000  \n",
              "160         4          5      3  R$ 2.200.000  \n",
              "334         6          4     10  R$ 1.700.000  \n",
              "...       ...        ...    ...           ...  \n",
              "9645        3          5      5  R$ 1.650.000  \n",
              "9701        3          2      4  R$ 1.650.000  \n",
              "9737        3          2      4  R$ 1.650.000  \n",
              "9807        3          1      6  R$ 1.500.000  \n",
              "9852        3          3      4  R$ 1.600.000  \n",
              "\n",
              "[184 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-11f3e10b-2870-4e2a-82c6-94a84a450d63\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rua</th>\n",
              "      <th>Bairro</th>\n",
              "      <th>Cidade</th>\n",
              "      <th>Metragem</th>\n",
              "      <th>Quartos</th>\n",
              "      <th>Banheiros</th>\n",
              "      <th>Vagas</th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>Rua Pero Correia</td>\n",
              "      <td>Vila Mariana</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>250</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>R$ 1.350.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>120</th>\n",
              "      <td>Praça Doutor Carvalho Franco</td>\n",
              "      <td>Vila Mariana</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>250</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>R$ 2.450.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>155</th>\n",
              "      <td>Rua Professor João Marinho</td>\n",
              "      <td>Vila Mariana</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>170</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>R$ 1.490.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>160</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Vila Mariana</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>228</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>R$ 2.200.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>334</th>\n",
              "      <td>Rua Pero Correia, 892</td>\n",
              "      <td>Vila Mariana</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>350</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>10</td>\n",
              "      <td>R$ 1.700.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9645</th>\n",
              "      <td>Rua Sousa Ramos</td>\n",
              "      <td>Vila Mariana</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>285</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>R$ 1.650.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9701</th>\n",
              "      <td>Rua Benito Juarez</td>\n",
              "      <td>Vila Mariana</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>171</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>R$ 1.650.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9737</th>\n",
              "      <td>Rua Benito Juarez</td>\n",
              "      <td>Vila Mariana</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>171</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>R$ 1.650.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9807</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Vila Mariana</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>275</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>R$ 1.500.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9852</th>\n",
              "      <td>Rua França Pinto</td>\n",
              "      <td>Vila Mariana</td>\n",
              "      <td>São Paulo</td>\n",
              "      <td>280</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>R$ 1.600.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>184 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11f3e10b-2870-4e2a-82c6-94a84a450d63')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-11f3e10b-2870-4e2a-82c6-94a84a450d63 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-11f3e10b-2870-4e2a-82c6-94a84a450d63');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "imoveis_vila_mariana[\"Metragem\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kfcXiGrnWj04",
        "outputId": "83cc805c-5978-4fdd-8fc8-0261ae10512f"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "233.6195652173913"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "n_imoveis_bairro = dados[\"Bairro\"].value_counts()\n",
        "n_imoveis_bairro.head(10).plot.bar()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 549
        },
        "id": "6Z9MLIQLWnyn",
        "outputId": "77e9d597-35dc-424e-b861-45d67b40cf52"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAigAAAIDCAYAAAAuZuVwAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABhg0lEQVR4nO3deVhUZf8G8HsAAVmGVRYTAZdUBNwV3DIXcENN37fMDY00jdTc480ltcLMvUgzF9Q0NfctNzTRxFRc0FQStNAULBEQVBB4fn8o5+cI6gxq55zh/lzXXDHnHJjvyVnuec6zaIQQAkREREQKYiJ3AURERESPY0AhIiIixWFAISIiIsVhQCEiIiLFYUAhIiIixWFAISIiIsVhQCEiIiLFMZO7gNIoLCzEtWvXYGtrC41GI3c5REREpAchBG7fvo2KFSvCxOTpbSSqDCjXrl2Dh4eH3GUQERFRKVy5cgWVKlV66jGqDCi2trYAHpygVquVuRoiIiLSR1ZWFjw8PKTP8adRZUApuqyj1WoZUIiIiFRGn+4Z7CRLREREisOAQkRERIrDgEJERESKw4BCREREisOAQkRERIrDgEJERESKw4BCREREisOAQkRERIrDgEJERESKw4BCREREisOAQkRERIrDgEJERESKw4BCREREisOAQkRERIrDgEJERESKYyZ3Af8Wr4+2v/TH+GNap5f+GERERGUBW1CIiIhIcRhQiIiISHEYUIiIiEhxniugTJs2DRqNBh9++KG07d69ewgPD4eTkxNsbGzQo0cPpKWl6fxeSkoKOnXqBCsrK7i4uGDMmDHIz89/nlKIiIjIiJS6k+yxY8fw7bffwt/fX2f7iBEjsH37dvz444+ws7PDBx98gO7du+OXX34BABQUFKBTp05wc3PD4cOHcf36dfTr1w/lypXD559//nxnUwawsy8REZUFpWpByc7ORu/evfHdd9/BwcFB2p6ZmYnFixdj1qxZaN26NRo0aIClS5fi8OHDOHLkCABg9+7dOHfuHL7//nvUrVsXHTp0wNSpUxEVFYW8vLwXc1ZERESkaqUKKOHh4ejUqRPatm2rsz0+Ph7379/X2V6zZk1UrlwZcXFxAIC4uDj4+fnB1dVVOiY4OBhZWVn47bffSny83NxcZGVl6dyIiIjIeBl8iWf16tU4ceIEjh07VmxfamoqzM3NYW9vr7Pd1dUVqamp0jGPhpOi/UX7ShIZGYnJkycbWioRERGplEEtKFeuXMHw4cOxcuVKWFpavqyaiomIiEBmZqZ0u3Llyr/22ERERPTvMyigxMfH48aNG6hfvz7MzMxgZmaGAwcOYN68eTAzM4Orqyvy8vKQkZGh83tpaWlwc3MDALi5uRUb1VN0v+iYx1lYWECr1erciIiIyHgZFFDatGmDM2fO4NSpU9KtYcOG6N27t/RzuXLlEBMTI/1OYmIiUlJSEBgYCAAIDAzEmTNncOPGDemYPXv2QKvVwsfH5wWdFhEREamZQX1QbG1t4evrq7PN2toaTk5O0vawsDCMHDkSjo6O0Gq1GDp0KAIDAxEQEAAACAoKgo+PD/r27Yvp06cjNTUV48ePR3h4OCwsLF7QaREREZGavfDFAmfPng0TExP06NEDubm5CA4OxjfffCPtNzU1xbZt2zBkyBAEBgbC2toaoaGhmDJlyosuhYiIiFTquQPKzz//rHPf0tISUVFRiIqKeuLveHp6YseOHc/70ERERGSkuBYPERERKQ4DChERESkOAwoREREpDgMKERERKQ4DChERESkOAwoREREpDgMKERERKQ4DChERESkOAwoREREpDgMKERERKQ4DChERESkOAwoREREpDgMKERERKQ4DChERESkOAwoREREpDgMKERERKQ4DChERESkOAwoREREpDgMKERERKQ4DChERESkOAwoREREpDgMKERERKQ4DChERESkOAwoREREpDgMKERERKQ4DChERESkOAwoREREpDgMKERERKQ4DChERESkOAwoREREpDgMKERERKQ4DChERESmOQQFl/vz58Pf3h1arhVarRWBgIH766Sdpf6tWraDRaHRugwcP1vkbKSkp6NSpE6ysrODi4oIxY8YgPz//xZwNERERGQUzQw6uVKkSpk2bhurVq0MIgWXLlqFr1644efIkateuDQAYOHAgpkyZIv2OlZWV9HNBQQE6deoENzc3HD58GNevX0e/fv1Qrlw5fP755y/olIiIiEjtDAooISEhOvc/++wzzJ8/H0eOHJECipWVFdzc3Er8/d27d+PcuXPYu3cvXF1dUbduXUydOhXjxo3DJ598AnNz81KeBhERERmTUvdBKSgowOrVq5GTk4PAwEBp+8qVK+Hs7AxfX19ERETgzp070r64uDj4+fnB1dVV2hYcHIysrCz89ttvT3ys3NxcZGVl6dyIiIjIeBnUggIAZ86cQWBgIO7duwcbGxts3LgRPj4+AIBevXrB09MTFStWREJCAsaNG4fExERs2LABAJCamqoTTgBI91NTU5/4mJGRkZg8ebKhpRIREZFKGRxQatSogVOnTiEzMxPr1q1DaGgoDhw4AB8fHwwaNEg6zs/PD+7u7mjTpg2Sk5NRtWrVUhcZERGBkSNHSvezsrLg4eFR6r9HREREymbwJR5zc3NUq1YNDRo0QGRkJOrUqYO5c+eWeGyTJk0AAElJSQAANzc3pKWl6RxTdP9J/VYAwMLCQho5VHQjIiIi4/Xc86AUFhYiNze3xH2nTp0CALi7uwMAAgMDcebMGdy4cUM6Zs+ePdBqtdJlIiIiIiKDLvFERESgQ4cOqFy5Mm7fvo1Vq1bh559/xq5du5CcnIxVq1ahY8eOcHJyQkJCAkaMGIGWLVvC398fABAUFAQfHx/07dsX06dPR2pqKsaPH4/w8HBYWFi8lBMkIiIi9TEooNy4cQP9+vXD9evXYWdnB39/f+zatQvt2rXDlStXsHfvXsyZMwc5OTnw8PBAjx49MH78eOn3TU1NsW3bNgwZMgSBgYGwtrZGaGiozrwpRERERAYFlMWLFz9xn4eHBw4cOPDMv+Hp6YkdO3YY8rBERERUxnAtHiIiIlIcBhQiIiJSHAYUIiIiUhwGFCIiIlIcBhQiIiJSHAYUIiIiUhwGFCIiIlIcBhQiIiJSHAYUIiIiUhwGFCIiIlIcBhQiIiJSHAYUIiIiUhwGFCIiIlIcBhQiIiJSHAYUIiIiUhwGFCIiIlIcBhQiIiJSHAYUIiIiUhwGFCIiIlIcBhQiIiJSHAYUIiIiUhwGFCIiIlIcBhQiIiJSHAYUIiIiUhwGFCIiIlIcBhQiIiJSHAYUIiIiUhwGFCIiIlIcM7kLoLLJ66PtL/Xv/zGt00v9+0RE9HKxBYWIiIgUhwGFiIiIFIcBhYiIiBTHoIAyf/58+Pv7Q6vVQqvVIjAwED/99JO0/969ewgPD4eTkxNsbGzQo0cPpKWl6fyNlJQUdOrUCVZWVnBxccGYMWOQn5//Ys6GiIiIjIJBAaVSpUqYNm0a4uPjcfz4cbRu3Rpdu3bFb7/9BgAYMWIEtm7dih9//BEHDhzAtWvX0L17d+n3CwoK0KlTJ+Tl5eHw4cNYtmwZoqOjMXHixBd7VkRERKRqBo3iCQkJ0bn/2WefYf78+Thy5AgqVaqExYsXY9WqVWjdujUAYOnSpahVqxaOHDmCgIAA7N69G+fOncPevXvh6uqKunXrYurUqRg3bhw++eQTmJubv7gzIyIiItUqdR+UgoICrF69Gjk5OQgMDER8fDzu37+Ptm3bSsfUrFkTlStXRlxcHAAgLi4Ofn5+cHV1lY4JDg5GVlaW1ApTktzcXGRlZenciIiIyHgZHFDOnDkDGxsbWFhYYPDgwdi4cSN8fHyQmpoKc3Nz2Nvb6xzv6uqK1NRUAEBqaqpOOCnaX7TvSSIjI2FnZyfdPDw8DC2biIiIVMTggFKjRg2cOnUKv/76K4YMGYLQ0FCcO3fuZdQmiYiIQGZmpnS7cuXKS308IiIikpfBM8mam5ujWrVqAIAGDRrg2LFjmDt3Lt566y3k5eUhIyNDpxUlLS0Nbm5uAAA3NzccPXpU5+8VjfIpOqYkFhYWsLCwMLRUIiIiUqnnngelsLAQubm5aNCgAcqVK4eYmBhpX2JiIlJSUhAYGAgACAwMxJkzZ3Djxg3pmD179kCr1cLHx+d5SyEiIiIjYVALSkREBDp06IDKlSvj9u3bWLVqFX7++Wfs2rULdnZ2CAsLw8iRI+Ho6AitVouhQ4ciMDAQAQEBAICgoCD4+Pigb9++mD59OlJTUzF+/HiEh4ezhYSIiIgkBgWUGzduoF+/frh+/Trs7Ozg7++PXbt2oV27dgCA2bNnw8TEBD169EBubi6Cg4PxzTffSL9vamqKbdu2YciQIQgMDIS1tTVCQ0MxZcqUF3tWREREpGoGBZTFixc/db+lpSWioqIQFRX1xGM8PT2xY8cOQx6WiIiIyhiuxUNERESKw4BCREREisOAQkRERIrDgEJERESKw4BCREREisOAQkRERIrDgEJERESKw4BCREREisOAQkRERIrDgEJERESKw4BCREREisOAQkRERIrDgEJERESKw4BCREREisOAQkRERIrDgEJERESKw4BCREREisOAQkRERIrDgEJERESKw4BCREREisOAQkRERIrDgEJERESKw4BCREREisOAQkRERIrDgEJERESKw4BCREREisOAQkRERIrDgEJERESKw4BCREREisOAQkRERIrDgEJERESKw4BCREREimNQQImMjESj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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "QqtyHNHQWruE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Desafios:\n",
        "\n",
        "1 - Realizar a média da metragem para cara um dos bairros (Paulo)\n",
        "\n",
        "2 - 2 formas de selecionar os dados por bairro (consultar os métodos na documentação do pandas) (Thiago)\n",
        "\n",
        "3 - Explorar alguns gráficos na documentação e aplicar nas demais colunas do DF, tentar colocar alguma conclusão (Thiago)\n",
        "\n",
        "4 - Pegar outros estatísticas dos dados, média, mediana, mim, max (Vivi)\n",
        "\n",
        "5 - Descobrir quais são os bairros que não tem nome de Rua. (Vivi)"
      ],
      "metadata": {
        "id": "4Q0-Hm6tWxoe"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "qgevmiexWylw"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}